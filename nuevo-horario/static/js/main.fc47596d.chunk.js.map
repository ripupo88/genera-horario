{"version":3,"sources":["components/navBar/NavBar.js","reducers/types.js","components/select/select.js","helpers/setHorario.js","actions/generaSemana.js","store/store.js","actions/resetAction.js","reducers/trabajadoresReducer.js","actions/fijarAction.js","components/table/table.js","components/chip/Chip.js","components/fade/Fade.js","components/FinalChanges/FinalChanges.js","components/temp/Instrucciones.js","components/view/HorarioScreen.js","components/view/HomeScreem.js","components/layout/Admin.js","components/layout/Login.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","to","href","types","BootstrapInput","withStyles","theme","input","width","position","fontSize","transition","transitions","create","fontFamily","join","borderRadius","borderColor","boxShadow","InputBase","SelectTable","myKey","value","options","dispatch","useContext","myContext","SelectTable1","props","React","memo","handleChange","item","console","log","payload","keys","Select","key","labelId","MenuItem","onClick","map","i","undefined","setHorario","trabajadores","newsemana","cleanSemana","setSemana","semana","Array","length","dia","hora","puesto","puntos","doblapuntos","name","OtroName","listaHorario","ListaLibrar","trab","yajornada","fuenoche","fuetarde","fuelibre","horario","cada","forced","valor","x","esRenganche","diasLibrados","filter","a","fuesegundanoche","noche","push","Math","floor","random","manana","unshift","sort","b","pista","splice","tienda","ceil","error","tarde","Error","setHorarioOrden","orden","generaHorario","trabajadoresObject","horarioGenerado","store","conf","index","checked","desabled","alert","fecha","semanaDefault","resetAction","trabajadoresReducer","state","action","newTrab","puestos","t","tt","fijarAction","useStyles","makeStyles","table","minWidth","padding","SimpleTable","SimpleTable1","classes","col1","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","style","backgroundColor","hey","align","TableBody","row","scope","cel","Button","color","margin","then","e","preventDefault","chip","marg","root","marginTop","display","justifyContent","flexWrap","spacing","Chips","Chips1","Chip","label","clickable","indexLocal","variant","deleteIcon","colap","marginLeft","inputName","SimpleCollapse","SimpleCollapse1","Collapse","in","Typography","TextField","onChange","target","inputProps","step","min","max","palette","background","paper","border","formControl","textAlign","selectEmpty","Instrucciones","createContext","init","localStorage","getItem","JSON","parse","HorarioScreen","useReducer","useEffect","setItem","stringify","Provider","paddingTop","paddingBottom","HomeScreem","Admin","Container","maxWidth","exact","path","createBrowserHistory","forceRefresh","Copyright","Link","Date","getFullYear","cache","InMemoryCache","client","ApolloClient","link","HttpLink","uri","headers","authorization","miclient","user","pass","Promise","resolve","reject","mutate","mutation","gql","result","catch","body","common","white","flexDirection","alignItems","avatar","secondary","main","form","submit","LoginScreem","useState","loged","entrando","loginUser","token","data","login","CssBaseline","Avatar","onSubmit","noValidate","required","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Grid","container","xs","Box","mt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gVAGaA,EAAS,WAClB,OACI,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,gBACX,4BACIA,UAAU,iBACVC,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMN,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BO,GAAG,aACzC,wBAAIP,UAAU,cACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CACIQ,gBAAgB,SAChBR,UAAU,WACVS,GAAG,SAHP,SAKW,MAGf,wBAAIT,UAAU,YACV,kBAAC,IAAD,CACIQ,gBAAgB,SAChBR,UAAU,WACVS,GAAG,YAHP,YAQJ,wBAAIT,UAAU,YACV,uBAAGA,UAAU,WAAWU,KAAK,KAA7B,YAIJ,wBAAIV,UAAU,YACV,uBAAGA,UAAU,WAAWU,KAAK,KAA7B,kBAKR,yBAAKV,UAAU,QACX,2C,kHClDXW,EACM,iBADNA,EAEC,mBAFDA,EAGI,8BAHJA,EAII,2BAJJA,EAKE,kCALFA,EAME,mBANFA,EAOC,kBAPDA,EAQE,sBARFA,EASC,mBATDA,EAUC,kBAVDA,EAWA,wBAXAA,EAYF,iBCLLC,EAAiBC,aAAW,SAACC,GAAD,MAAY,CAC1CC,MAAO,CACHC,MAAO,QACPC,SAAU,WACVC,SAAU,QACVC,WAAYL,EAAMM,YAAYC,OAAO,CAAC,eAAgB,eAEtDC,WAAY,CACR,SACA,gBACA,qBACA,aACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,KACP,UAAW,CACPC,aAAc,EACdC,YAAa,UACbC,UAAW,wCAtBAb,CAyBnBc,KAESC,EAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChCC,EAAaC,qBAAWC,IAAxBF,SACR,OAAO,kBAACG,EAAD,CAAcC,MAAO,CAAEJ,WAAUH,QAAOC,QAAOC,cAE7CI,EAAeE,IAAMC,MAAK,YAAgB,IAAbF,EAAY,EAAZA,MAC9BJ,EAAoCI,EAApCJ,SAAUH,EAA0BO,EAA1BP,MAAOC,EAAmBM,EAAnBN,MAAOC,EAAYK,EAAZL,QAG1BQ,EAAe,SAACC,GAClBC,QAAQC,IAAI,MAAOF,GACnBR,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CACLC,KAAM,CAACf,EAAM,GAAIA,EAAM,IACvBC,MAAOU,MAInB,OACI,kBAACK,EAAA,EAAD,CACIC,IAAKjB,EACLkB,QAAQ,+BACRxC,GAAG,yBACHuB,MAAOA,EACPf,MAAO,kBAACH,EAAD,OAEP,kBAACoC,EAAA,EAAD,CAAUC,QAAS,kBAAMV,EAAa,OAAOT,MAAM,IAC/C,qCAEHC,EAAQmB,KAAI,SAACV,EAAMW,GAEhB,YADaC,IAATZ,GAAoBC,QAAQC,IAAIF,GAEhC,kBAACQ,EAAA,EAAD,CACIC,QAAS,kBAAMV,EAAaC,IAC5BM,IAAKK,EACLrB,MAAOU,GAENA,U,2DCAnBa,EAAa,SAACC,GAChB,IAAMC,EAAYC,IAElB,OADaC,EAAUF,EAAWD,IAIzBE,EAAc,WAEvB,IADA,IAAIE,EAAS,IAAIC,MAAM,GACdR,EAAI,EAAGA,EAAIO,EAAOE,OAAQT,IAC/BO,EAAOP,GAAK,IAAIQ,MAAM,GAE1B,OAAOD,GAGLD,EAAY,SAACC,EAAQJ,GACvB,IADwC,EACpCO,EAAM,CACN,QACA,SACA,YACA,SACA,UACA,SACA,WAEAC,EAAO,GACPC,EAAS,GACTC,GAAU,EACVC,EAAc,EACdC,EAAO,GACPC,EAAW,GACXC,EAAe,GACfC,EAAc,GAjBsB,cAkBrBf,GAlBqB,IAkBxC,2BAAiC,CAAC,IAAvBgB,EAAsB,QAC7BA,EAAKC,WAAY,EACjBD,EAAKE,UAAW,EAChBF,EAAKG,UAAW,EAChBH,EAAKI,UAAW,EAJa,oBAKVJ,EAAKZ,OAAOiB,SALF,IAK7B,2BAAwC,CAAC,IAA9BC,EAA6B,SAChB,IAAhBA,EAAKC,SAAkBD,EAAKE,MAAQ,OANf,kCAlBO,gCA2BxC,IAAK,IAAI3B,EAAI,EAAGA,EAAIO,EAAOE,OAAQT,IAAK,CACpC,IAAK,IAAI4B,EAAI,EAAGA,EAAIrB,EAAOP,GAAGS,OAAQmB,IAAK,CACvCf,GAAU,EACV,IAAIgB,GAAc,EACdC,EAAe,GACnB,OAAQF,GACJ,KAAK,EACDb,EAAO,GADX,oBAEuBZ,GAFvB,IAEI,2BAAiC,CAAC,IAAvBgB,EAAsB,QAK7B,GAJAW,EAAeX,EAAKZ,OAAOiB,QAAQO,QAC/B,SAACC,GAAD,MAAmB,MAAZA,EAAEL,OAA6B,OAAZK,EAAEL,UAG5BR,EAAKC,UAAT,CACA,GACqC,MAAjCD,EAAKZ,OAAOiB,QAAQxB,GAAG2B,OACvBR,EAAKZ,OAAOiB,QAAQxB,GAAG0B,OACzB,CACER,EAAc,CAACC,EAAKJ,MACpB,MAEJ,IAAII,EAAKZ,OAAOiB,QAAQxB,GAAG0B,UACvBI,EAAarB,QAAU,GAA3B,CAEA,GAAU,IAANT,GAAmC,IAAxB8B,EAAarB,OAAc,CACtCS,EAAc,CAACC,EAAKJ,MACpB,MAEJ,GAAII,EAAKc,iBAAmBd,EAAKe,MAAQ,EAAG,CACxChB,EAAc,CAACC,EAAKJ,MACpB,MAEJ,GAAII,EAAKI,UAA2B,IAAfJ,EAAKe,MAAa,CACnChB,EAAc,CAACC,EAAKJ,MACpB,MAEAI,EAAKI,WACLL,EAAc,CACVC,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,OAIbG,EAAYiB,KAAKhB,EAAKJ,SAhD9B,gCAoDQA,EADAG,EAAYT,OAAS,EAEjBS,EACIkB,KAAKC,MAAMD,KAAKE,SAAWpB,EAAYT,SAGxCS,EAAY,GAGvBA,EAAc,GACdY,EAAe,GA7DnB,oBA8DuB3B,GA9DvB,IA8DI,2BAAiC,CAAC,IAAvBgB,EAAsB,QAC7B,GAAIA,EAAKJ,OAASA,EAAM,CACpBI,EAAKC,WAAY,EACjBD,EAAKE,UAAW,EAChBF,EAAKc,iBAAkB,EACvBd,EAAKG,UAAW,EAChBH,EAAKI,UAAW,EAChBJ,EAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,IAC/B,QAtEZ,gCAyEIf,EAAS,GACTD,EAAO,QACP,MAEJ,KAAK,EACDI,EAAO,GADX,oBAEuBZ,GAFvB,IAEI,2BAAiC,CAAC,IAAvBgB,EAAsB,QAK7B,GAJAW,EAAeX,EAAKZ,OAAOiB,QAAQO,QAC/B,SAACC,GAAD,MAAmB,MAAZA,EAAEL,OAA6B,OAAZK,EAAEL,UAG5BR,EAAKC,UAAT,CAGA,GACqC,OAAjCD,EAAKZ,OAAOiB,QAAQxB,GAAG2B,OACvBR,EAAKZ,OAAOiB,QAAQxB,GAAG0B,OACzB,CACER,EAAc,CAACC,EAAKJ,MACpB,MAEJ,IAAII,EAAKZ,OAAOiB,QAAQxB,GAAG0B,UACvBI,EAAarB,QAAU,GAA3B,CAGA,GAAU,IAANT,GAAmC,IAAxB8B,EAAarB,OAAc,CACtCS,EAAc,CAACC,EAAKJ,MACpB,MAEJ,GAAII,EAAKI,UAA2B,IAAfJ,EAAKe,MAAa,CACnChB,EAAc,CAACC,EAAKJ,MACpB,MAGAI,EAAKI,WACLL,EAAc,CACVC,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,KACLI,EAAKJ,OAIbG,EAAYiB,KAAKhB,EAAKJ,SAhD9B,gCAmDQA,EADAG,EAAYT,OAAS,EAEjBS,EACIkB,KAAKC,MAAMD,KAAKE,SAAWpB,EAAYT,SAGxCS,EAAY,GAEvBA,EAAc,GACdY,EAAe,GA3DnB,oBA4DuB3B,GA5DvB,IA4DI,2BAAiC,CAAC,IAAvBgB,EAAsB,QAC7B,GAAIA,EAAKJ,OAASA,EAAM,CACpBI,EAAKC,WAAY,EACjBD,EAAKE,UAAW,EAChBF,EAAKc,iBAAkB,EACvBd,EAAKG,UAAW,EAChBH,EAAKI,UAAW,EAChBJ,EAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,KAC/B,QApEZ,gCAuEIf,EAAS,GACTD,EAAO,QACP,MAEJ,KAAK,EACDI,EAAO,GADX,oBAEuBZ,GAFvB,IAEI,2BAAiC,CAAC,IAAvBgB,EAAsB,QAC7B,GACqC,MAAjCA,EAAKZ,OAAOiB,QAAQxB,GAAG2B,OACvBR,EAAKZ,OAAOiB,QAAQxB,GAAG0B,OACzB,CACEP,EAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,IAC/BZ,EAAOI,EAAKJ,KACZ,MAEAI,EAAKZ,OAAOiB,QAAQxB,GAAG0B,SAEvBP,EAAKC,WACLD,EAAKe,MAAQ,GACbf,EAAKe,MAAQrB,IACbA,EAASM,EAAKe,MACdnB,EAAOI,EAAKJ,QAjBxB,oDAoBuBZ,GApBvB,IAoBI,2BAAiC,CAAC,IAAvBgB,EAAsB,QACzBA,EAAKJ,OAASA,IACVI,EAAKE,SACLF,EAAKc,iBAAkB,EAEvBd,EAAKc,iBAAkB,EAE3Bd,EAAKC,WAAY,EACjBD,EAAKE,UAAW,EAChBF,EAAKG,UAAW,EAChBH,EAAKI,UAAW,EAChBJ,EAAKI,UAAW,EAChBJ,EAAKI,UAAW,EAChBJ,EAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,MAjC3C,gCAoCIf,EAAS,SACTD,EAAO,QACP,MAEJ,KAAK,EACDI,EAAO,GADX,oBAEuBZ,GAFvB,IAEI,2BAAiC,CAAC,IAAvBgB,EAAsB,QACzBA,EAAKE,WAULF,EAAKC,WAELD,EAAKoB,OAAS,IAIdzB,EAHCK,EAAKG,SAGQ,EAFAH,EAAKoB,OAKvBtB,EAAauB,QAAb,2BACOrB,GADP,IAEIoB,OAAQzB,QAxBpB,gCA4BIG,EAAawB,MAAK,SAAUT,EAAGU,GAC3B,OAAIV,EAAEO,OAASG,EAAEH,QACL,EAERP,EAAEO,OAASG,EAAEH,OACN,GAGH,KAGZ,IACI,KACItB,EAAa,GAAG0B,MAAQ1B,EAAa,GAAG0B,QACxC,GAEA1B,EAAa2B,OAAO,EAAG,IAGtB3B,EAAa,GAAG0B,MAAQ1B,EAAa,GAAG4B,QACrCT,KAAKU,KAAK7B,EAAa,GAAG0B,MAAQ,KACrC1B,EAAa,GAAG0B,MAAQ1B,EAAa,GAAG4B,QACrCT,KAAKU,KAAK7B,EAAa,GAAG0B,MAAQ,KAEtC5B,EAAOE,EAAa,GAAGF,KACvBC,EAAWC,EAAa,GAAGF,OAE3BA,EAAOE,EAAa,GAAGF,KACvBC,EAAWC,EAAa,GAAGF,MAEjC,MAAOgC,IACLhC,EAAO,GACPC,EAAW,GAGfC,EAAe,GA/DnB,oBAgEuBd,GAhEvB,IAgEI,2BAAiC,CAAC,IAAvBgB,EAAsB,QACzBA,EAAKJ,OAASA,IAEVc,IADAV,EAAKG,SAKTH,EAAKC,WAAY,EACjBD,EAAKE,UAAW,EAChBF,EAAKG,UAAW,EAChBH,EAAKI,UAAW,EAChBJ,EAAKI,UAAW,EAChBJ,EAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,MA5E3C,gCA+EIf,EAAS,QACTD,EAAO,YACPG,EAAc,EAEd,MAEJ,KAAK,EACDC,EAAOC,EACPA,EAAW,GAFf,oBAIuBb,GAJvB,IAII,2BAAiC,CAAC,IAAvBgB,EAAsB,QACzBA,EAAKJ,OAASA,IAEVc,IADAV,EAAKG,SAKTH,EAAKC,WAAY,EACjBD,EAAKE,UAAW,EAChBF,EAAKG,UAAW,EAChBH,EAAKI,UAAW,EAChBJ,EAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,OAf3C,gCAkBIb,EAAc,EACdF,EAAS,SACTD,EAAO,YACP,MAEJ,KAAK,EACDI,EAAO,GADX,oBAEuBZ,GAFvB,IAEI,2BAAiC,CAAC,IAAvBgB,EAAsB,QACzBA,EAAKE,WAULF,EAAKC,YAELD,EAAK6B,MAAQ7B,EAAKwB,MAAQ9B,IAC1BA,EAASM,EAAK6B,OAElB/B,EAAauB,QAAQrB,MAlB7B,gCAqBIF,EAAawB,MAAK,SAAUT,EAAGU,GAC3B,OAAIV,EAAEgB,MAAQN,EAAEM,OACJ,EAERhB,EAAEgB,MAAQN,EAAEM,MACL,GAGH,KAGZ,IACI,IACK/B,EAAa,GAAG0B,MAAQ1B,EAAa,GAAG4B,QACrCT,KAAKU,KAAK7B,EAAa,GAAG0B,MAAQ,KACrC1B,EAAa,GAAG0B,MAAQ1B,EAAa,GAAG4B,QACrCT,KAAKU,KAAK7B,EAAa,GAAG0B,MAAQ,IACxC,CACE,GAC8B,IAA1B1B,EAAa,GAAG0B,OACW,IAA3B1B,EAAa,GAAG4B,OAEhB,MAAM,IAAII,MACdlC,EAAOE,EAAa,GAAGF,KACvBC,EAAWC,EAAa,GAAGF,SACxB,CACH,GAC8B,IAA1BE,EAAa,GAAG0B,OACW,IAA3B1B,EAAa,GAAG4B,OAEhB,MAAM,IAAII,MACdlC,EAAOE,EAAa,GAAGF,KACvBC,EAAWC,EAAa,GAAGF,MAEjC,MAAOgC,IACLhC,EAAO,GACPC,EAAW,GAGfC,EAAe,GA5DnB,qBA8DuBd,GA9DvB,IA8DI,6BAAiC,CAAC,IAAvBgB,GAAsB,QACzBA,GAAKJ,OAASA,IACdI,GAAKC,WAAY,EACjBD,GAAKE,UAAW,EAChBF,GAAKG,UAAW,EAChBH,GAAKI,UAAW,EAChBJ,GAAKI,UAAW,EAChBJ,GAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,MArE3C,kCAwEIf,EAAS,QACTD,EAAO,QACP,MAEJ,KAAK,EACDI,EAAOC,EACPA,EAAW,GAFf,sBAGuBb,GAHvB,IAGI,8BAAiC,CAAC,IAAvBgB,GAAsB,SACzBA,GAAKJ,OAASA,IACdI,GAAKC,WAAY,EACjBD,GAAKE,UAAW,EAChBF,GAAKG,UAAW,EAChBH,GAAKI,UAAW,EAChBJ,GAAKZ,OAAOiB,QAAQxB,GAAG2B,MAAQ,OAT3C,kCAYIf,EAAS,SACTD,EAAO,QAMfJ,EAAOP,GAAG4B,GAAK,CACXb,KAAM,CAACA,GACPc,cACAnB,IAAKA,EAAIV,GACTW,OACAC,UAGJG,EAAO,GAzZyB,sBA2ZjBZ,GA3ZiB,IA2ZpC,8BAAiC,UACxBiB,WAAY,GA5Ze,mCAgaxC,OAAOb,GAGI2C,EAnhBS,SAAC/C,GACrBb,QAAQC,IAAIY,GACZ,IAAIgD,EAAQjD,EAAWC,GAkEvB,MAjEe,CACX,CACIgD,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,IAEb,CACIA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,IAEb,CACIA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,IAEb,CACIA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,IAEb,CACIA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,IAEb,CACIA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,IAEb,CACIA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,GACTA,EAAM,GAAG,MC9DRC,EAAa,uCAAG,WAAOC,GAAP,eAAArB,EAAA,6DACnBsB,EAAkBJ,EAAgBG,GADf,kBAElB,CACHvG,KAAMU,EACNgC,QAAS8D,IAJY,2CAAH,sDCHbC,EAAQ,CACjBC,KAAM,CACFC,MAAO,EACPC,SAAS,EACTC,UAAU,EACVC,OAAO,GAEXzD,aAAc,CACV,CACIY,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,MAInC,CACIX,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,MAInC,CACIX,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,MAInC,CACIX,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,MAInC,CACIX,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,MAKnC,CACIX,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,MAInC,CACIX,KAAM,cACN8B,OAAQ,EACRF,MAAO,EACPJ,OAAQ,EACRS,MAAO,EACPd,MAAO,EACPd,WAAW,EACXE,UAAU,EACVD,UAAU,EACVY,iBAAiB,EACjBV,UAAU,EACVhB,OAAQ,CACJsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,OAKvCoC,cAAe,CACX,CACI,CACI/C,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,YACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,YACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,YACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,YACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,YACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,YACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,YACNC,OAAQ,WAGhB,CACI,CACIG,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,YACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,YACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,YACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,YACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,YACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,YACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,YACNC,OAAQ,UAGhB,CACI,CACIG,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,WAGhB,CACI,CACIG,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,QACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,QACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,SAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,UAGhB,CACI,CACIG,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,UAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,WAGhB,CACI,CACIG,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,KAGhB,CACI,CACIG,KAAM,CAAC,IACPL,IAAK,QACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,YACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,SACLC,KAAM,QACNC,OAAQ,IAEZ,CACIG,KAAM,CAAC,IACPL,IAAK,UACLC,KAAM,QACNC,OAAQ,OCzeXmD,EAAW,uCAAG,WAAO5D,GAAP,mBAAA6B,EAAA,oEACJ7B,GADI,IACvB,4BAAWgB,EAAsB,SACxBZ,OAAS,CACVsD,MAAO,GACPrC,QAAS,CACL,CAAEG,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,GACvB,CAAEC,MAAO,KAAMD,QAAQ,KAG/BpC,QAAQC,IAAI4B,GAdO,uDAgBhB,CACHrE,KAAMU,EACNgC,QAASW,IAlBU,2CAAH,sD,QCCX6D,EAAsB,SAACC,EAAOC,GACvC,IACIC,EADEC,EAAU,CAAC,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,MAEjD,OAAQF,EAAOpH,MACX,KAAKU,EACD,OAAO,2BAAKyG,GAAZ,IAAmBH,cAAeI,EAAO1E,UAE7C,KAAKhC,EAED2G,EAAO,YAAOF,EAAM9D,cACpB,IAAIxB,EAAQuF,EAAO1E,QAAQb,MAC3BW,QAAQC,IAAI,QAASZ,GACrB,IAAID,EAAQwF,EAAO1E,QAAQC,KAC3BH,QAAQC,IAAI,QAASb,GANzB,oBAOoByF,GAPpB,IAOI,2BAAyB,CAAC,IAAfE,EAAc,QACjBA,EAAEtD,OAASpC,IACX0F,EAAE9D,OAAOiB,QAAQ9C,EAAM,IAAIiD,MAAQyC,EAAQ1F,EAAM,IACjD2F,EAAE9D,OAAOiB,QAAQ9C,EAAM,IAAIgD,QAAS,IAVhD,8BAaIpC,QAAQC,IAAI4E,GAbhB,oBAcqBA,GAdrB,IAcI,2BAA0B,CAAC,IAAhBG,EAAe,QAElBA,EAAG/D,OAAOiB,QAAQ9C,EAAM,IAAIiD,QAAUyC,EAAQ1F,EAAM,KACpD4F,EAAGvD,OAASpC,IAEZW,QAAQC,IAAI,SACZ+E,EAAG/D,OAAOiB,QAAQ9C,EAAM,IAAIiD,MAAQ,KACpC2C,EAAG/D,OAAOiB,QAAQ9C,EAAM,IAAIgD,QAAS,IArBjD,8BAwBI,OAAO,2BAAKuC,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EACD,OAAO,2BACAyG,GADP,IAEIT,KAAK,2BAAMS,EAAMT,MAAb,IAAmBE,SAAUO,EAAMT,KAAKE,YAGpD,KAAKlG,EACD,OAAO,2BAAKyG,GAAZ,IAAmBT,KAAK,2BAAMS,EAAMT,MAAb,IAAmBE,SAAS,MAEvD,KAAKlG,EACD,OAAO,2BAAKyG,GAAZ,IAAmBT,KAAK,2BAAMS,EAAMT,MAAb,IAAmBC,MAAOS,EAAO1E,YAE5D,KAAKhC,EAGD,OAFA2G,EAAO,YAAOF,EAAM9D,eACZ+D,EAAO1E,QAAQiE,OAAOZ,OAASqB,EAAO1E,QAAQb,MAC/C,2BAAKsF,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EAGD,OAFA2G,EAAO,YAAOF,EAAM9D,eACZ+D,EAAO1E,QAAQiE,OAAOd,MAAQuB,EAAO1E,QAAQb,MAC9C,2BAAKsF,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EAGD,OAFA2G,EAAO,YAAOF,EAAM9D,eACZ+D,EAAO1E,QAAQiE,OAAOlB,OAAS2B,EAAO1E,QAAQb,MAC/C,2BAAKsF,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EAGD,OAFA2G,EAAO,YAAOF,EAAM9D,eACZ+D,EAAO1E,QAAQiE,OAAOT,MAAQkB,EAAO1E,QAAQb,MAC9C,2BAAKsF,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EAGD,OAFA2G,EAAO,YAAOF,EAAM9D,eACZ+D,EAAO1E,QAAQiE,OAAOvB,MAAQgC,EAAO1E,QAAQb,MAC9C,2BAAKsF,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EAGD,OAFA2G,EAAO,YAAOF,EAAM9D,eACZ+D,EAAO1E,QAAQiE,OAAO1C,KAAOmD,EAAO1E,QAAQb,MAC7C,2BAAKsF,GAAZ,IAAmB9D,aAAcgE,IAErC,KAAK3G,EACD,OAAO,2BAAKyG,GAAZ,IAAmB9D,aAAa,YAAK8D,EAAM9D,gBAE/C,QACI,OAAO8D,IChFNM,EAAW,uCAAG,WAAOpE,GAAP,yBAAA6B,EAAA,oEACJ7B,GADI,IACvB,2BAAiC,CAAtBgB,EAAsB,sBACXA,EAAKZ,OAAOiB,SADD,IAC7B,2BACsB,OADXd,EAA4B,SAC3BiB,OAA+B,OAAdjB,EAAIiB,QACzBjB,EAAIgB,QAAS,GAHQ,gCADV,uDAQhB,CACH5E,KAAMU,EACNgC,QAASW,IAVU,2CAAH,sDCkBlBqE,EAAYC,YAAW,CACzBC,MAAO,CACHC,SAAU,IACVC,QAAS,kBAIF,SAASC,KAAe,IAAD,EACN/F,qBAAWC,IAA/BkF,EAD0B,EAC1BA,MAAOpF,EADmB,EACnBA,SAEPsB,EAAgC8D,EAAhC9D,aAAc2D,EAAkBG,EAAlBH,cACtB,OAAO,kBAACgB,GAAD,CAAc7F,MAAO,CAAE6E,gBAAe3D,eAActB,cAG/D,SAASiG,GAAT,GAAkC,IAAV7F,EAAS,EAATA,MACZJ,EAA0CI,EAA1CJ,SAAUsB,EAAgClB,EAAhCkB,aAAc2D,EAAkB7E,EAAlB6E,cAE1BlF,EAAUuB,EAAaJ,KAAI,SAACV,GAAD,OAAUA,EAAK0B,QAE1CgE,EAAUP,IAiBVQ,EAAO,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAE9C,OACI,oCACI,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CACIvI,UAAWkI,EAAQL,MACnBW,KAAK,QACLlI,aAAW,gBAEX,kBAACmI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAZH,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAalBxF,KAAI,SAACV,EAAMW,GACjB,OACI,kBAACwF,EAAA,EAAD,CACI7F,IAAKN,EAAO,EACZoG,MAAO,CAAEC,gBAAiB,WAC1BC,IAAKtG,EACLuG,MAAM,UAELvG,QAMrB,kBAACwG,EAAA,EAAD,KACK/B,EAAc/D,KAAI,SAAC+F,EAAK9F,GAAN,OACf,kBAACuF,EAAA,EAAD,CAAU5F,IAAKK,GACX,kBAACwF,EAAA,EAAD,CACIC,MAAO,CAAEC,gBAAiB,WAC1BE,MAAM,SACNjG,IAAKK,EACLkF,UAAU,KACVa,MAAM,OAELf,EAAKhF,IAET8F,EAAI/F,KAAI,SAACiG,EAAKpE,GACX,OACI,kBAAC4D,EAAA,EAAD,CACIC,MACIO,EAAInE,YACE,CACI6D,gBACI,WAER1F,EAAI,GAAKA,EAAI,EACb,CACI0F,gBACI,WAER1F,EAAI,EACJ,CACI0F,gBACI,WAER,CACIA,gBACI,QAGlB/F,IAAKK,EAAI,IAAM4B,EACfsD,UAAU,KACVa,MAAM,OAEL/F,EAAI,EACD,2BAAIgG,EAAIjF,KAAK,IAEb,kBAAC,EAAD,CACIpB,IAAKK,EAAI,IAAM4B,EACflD,MAAO,CAACsB,EAAG4B,GACXjD,MAAOqH,EAAIjF,KAAK,GAChBnC,QAASA,eAWjD,yBAAK/B,UAAU,YACX,yBAAKA,UAAU,iBACX,kBAACoJ,EAAA,EAAD,CACInJ,KAAK,SACLuI,KAAK,QACLa,MAAM,UACNrJ,UAAWkI,EAAQoB,OACnBrG,QArGC,WACjBiE,EAAY5D,GAAciG,KAAKvH,KA+FnB,qBAUJ,yBAAKhC,UAAU,mBACX,kBAACoJ,EAAA,EAAD,CACInJ,KAAK,SACLuI,KAAK,QACLa,MAAM,UACNrJ,UAAWkI,EAAQoB,OACnBrG,QA3GA,WAChByE,EAAYpE,GAAciG,KAAKvH,KAqGnB,iBAUJ,yBAAKhC,UAAU,kBACX,kBAACoJ,EAAA,EAAD,CACInJ,KAAK,SACLuI,KAAK,QACLa,MAAM,UACNrJ,UAAWkI,EAAQoB,OACnBrG,QAhIE,SAACuG,GACnBA,EAAEC,iBACFlD,EAAcjD,GAAciG,KAAKvH,KAyHrB,c,sDC3Jd2F,I,OAAYC,aAAW,SAAC9G,GAAD,MAAY,CACrC4I,KAAM,CACFC,KAAM,SAEVC,KAAM,CACFC,UAAW,OACX7I,MAAO,OACP8I,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACV,QAAS,CACLV,OAAQxI,EAAMmJ,QAAQ,YAKnB,SAASC,KAAS,IAAD,EACAjI,qBAAWC,IAA/BkF,EADoB,EACpBA,MAAOpF,EADa,EACbA,SACPsB,EAAuB8D,EAAvB9D,aACAsD,EADuBQ,EAATT,KACdC,MACR,OAAO,kBAACuD,GAAD,CAAQ/H,MAAO,CAAEkB,eAAcsD,QAAO5E,cAGjD,SAASmI,GAAT,GAA4B,IAAV/H,EAAS,EAATA,MACNkB,EAAkClB,EAAlCkB,aAAcsD,EAAoBxE,EAApBwE,MAAO5E,EAAaI,EAAbJ,SACvBkG,EAAUP,KAWhB,OACI,yBAAK3H,UAAWkI,EAAQ0B,MACpB,kBAAC,KAAD,CAAc5J,UAAU,QAAQqJ,MAAM,YAErC/F,EAAaJ,KAAI,WAAWC,GAAO,IAAfe,EAAc,EAAdA,KACjB,OACI,kBAACkG,GAAA,EAAD,CACItH,IAAKoB,EACLlE,UAAWkI,EAAQwB,KACnBW,MAAOnG,EACPoG,WAAS,EACTrH,QAAS,WApBT,IAACsH,EACb3D,KADa2D,EAoB0BpH,GAlBvCnB,EAAS,CAAE/B,KAAMU,KAEjBqB,EAAS,CAAE/B,KAAMU,EAAgBgC,QAAS4H,IAC1CvI,EAAS,CAAE/B,KAAMU,MAgBL0I,MAAM,UACNmB,QAAQ,WACRC,WAAY,kBAAC,KAAD,Y,kCCpD9B9C,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACrC4J,MAAO,CACHlJ,aAAc,OACdqH,gBAAiB,UACjBd,QAAS,OACTgC,eAAgB,UAEpBhJ,MAAO,CACHC,MAAO,MACP2J,WAAY,OAEhBC,UAAW,CACP5J,MAAO,MACP2J,WAAY,WAIL,SAASE,KAAkB,IAAD,EACT5I,qBAAWC,IAA/BkF,EAD6B,EAC7BA,MAAOpF,EADsB,EACtBA,SACPsB,EAAuB8D,EAAvB9D,aAAcqD,EAASS,EAATT,KACdE,EAAmBF,EAAnBE,QAASD,EAAUD,EAAVC,MAEjB,OACI,kBAACkE,GAAD,CAAiB1I,MAAO,CAAEJ,WAAUsB,eAAcuD,UAASD,WAInE,SAASkE,GAAT,GAAqC,IAAV1I,EAAS,EAATA,MACfkB,EAA2ClB,EAA3CkB,aAActB,EAA6BI,EAA7BJ,SAAU6E,EAAmBzE,EAAnByE,QAASD,EAAUxE,EAAVwE,MACnCsB,EAAUP,KAFgB,EAIoBrE,EAAasD,GAA3D1C,EAJ0B,EAI1BA,KAAM8B,EAJoB,EAIpBA,OAAQF,EAJY,EAIZA,MAAOJ,EAJK,EAILA,OAAQS,EAJH,EAIGA,MAAOd,EAJV,EAIUA,MA2C1C,OACI,kBAAC0F,GAAA,EAAD,CAAU/K,UAAWkI,EAAQwC,MAAOM,GAAInE,GACpC,kBAACoE,GAAA,EAAD,CAAYT,QAAQ,MAAMtG,GAC1B,kBAACgH,GAAA,EAAD,CACIlL,UAAWkI,EAAQnH,MACnBsJ,MAAM,SACNvI,MAAOkE,EACPsD,OAAO,QACP6B,SAjDoB,SAAC3B,GAC7BxH,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CAAEb,MAAwB,EAAjB0H,EAAE4B,OAAOtJ,MAAW8E,YAgDlCyE,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLvL,KAAM,SACN,kBAAmB,kBAG3B,kBAACiL,GAAA,EAAD,CACIlL,UAAWkI,EAAQnH,MACnBsJ,MAAM,QACNvI,MAAOgE,EACPwD,OAAO,QACP6B,SA1DmB,SAAC3B,GAC5BxH,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CAAEb,MAAwB,EAAjB0H,EAAE4B,OAAOtJ,MAAW8E,YAyDlCyE,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLvL,KAAM,SACN,kBAAmB,kBAG3B,kBAACiL,GAAA,EAAD,CACIlL,UAAWkI,EAAQnH,MACnBsJ,MAAM,YACNvI,MAAO4D,EACP4D,OAAO,QACP6B,SAlEoB,SAAC3B,GAC7BxH,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CAAEb,MAAwB,EAAjB0H,EAAE4B,OAAOtJ,MAAW8E,YAiElCyE,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLvL,KAAM,SACN,kBAAmB,kBAG3B,kBAACiL,GAAA,EAAD,CACIlL,UAAWkI,EAAQnH,MACnBsJ,MAAM,QACNvI,MAAOqE,EACPmD,OAAO,QACP6B,SA1EmB,SAAC3B,GAC5BxH,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CAAEb,MAAwB,EAAjB0H,EAAE4B,OAAOtJ,MAAW8E,YAyElCyE,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLvL,KAAM,SACN,kBAAmB,kBAG3B,kBAACiL,GAAA,EAAD,CACIlL,UAAWkI,EAAQnH,MACnBsJ,MAAM,QACNvI,MAAOuD,EACPiE,OAAO,QACP6B,SAlFmB,SAAC3B,GAC5BxH,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CAAEb,MAAwB,EAAjB0H,EAAE4B,OAAOtJ,MAAW8E,YAiFlCyE,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLvL,KAAM,SACN,kBAAmB,kBAG3B,kBAACiL,GAAA,EAAD,CACIlL,UAAWkI,EAAQ0C,UACnBP,MAAM,SACNvI,MAAOoC,EACPoF,OAAO,QACP6B,SA1FkB,SAAC3B,GAC3BxH,EAAS,CACL/B,KAAMU,EACNgC,QAAS,CAAEb,MAAO0H,EAAE4B,OAAOtJ,MAAO8E,YAyF9ByE,WAAY,CACRC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLvL,KAAM,OACN,kBAAmB,mB,cC9JhBY,aAAW,SAACC,GAAD,MAAY,CAC1C8I,KAAM,CACF,YAAa,CACTC,UAAW/I,EAAMmJ,QAAQ,KAGjClJ,MAAO,CACHC,MAAO,OACPQ,aAAc,EACdP,SAAU,WACV4H,gBAAiB/H,EAAM2K,QAAQC,WAAWC,MAC1CC,OAAQ,oBACR1K,SAAU,GACV6G,QAAS,sBACT5G,WAAYL,EAAMM,YAAYC,OAAO,CAAC,eAAgB,eAEtDC,WAAY,CACR,SACA,gBACA,qBACA,aACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,KACP,UAAW,CACPC,aAAc,EACdC,YAAa,UACbC,UAAW,wCA/BAb,CAkCnBc,KAEciG,aAAW,SAAC9G,GAAD,MAAY,CACrC+K,YAAa,CACTC,UAAW,OACXxC,OAAQxI,EAAMmJ,QAAQ,KAG1B8B,YAAa,CACTlC,UAAW/I,EAAMmJ,QAAQ,Q,WCrDpB+B,GAAgB,WACzB,OACI,yBAAKhM,UAAU,MACX,mDACA,6BACA,2BACI,uCAEJ,4BACI,4LAKA,iLAKA,0IAIA,0IAIA,qUAOA,iKAKJ,6BACA,2BACI,uCAEJ,4BACI,yEACA,0IAIA,2IAIA,0JAKA,4HAIA,4JCvDHkC,GAAY+J,0BAEnBC,GAAO,WACT,OAAMC,aAAaC,QAAQ,UACvB3J,QAAQC,IAAI,MACL2J,KAAKC,MAAMH,aAAaC,QAAQ,WAEpC1F,GAGE6F,GAAgB,WAAO,IAAD,EACLC,qBAAWrF,EAAqB,GAAI+E,IAD/B,mBACxB9E,EADwB,KACjBpF,EADiB,KAGvBsB,EAAiB8D,EAAjB9D,aAOR,OALAmJ,qBAAU,WACNlG,EAAca,EAAM9D,cAAciG,KAAKvH,GACvCmK,aAAaO,QAAQ,QAASL,KAAKM,UAAUvF,MAC9C,CAAC9D,IAGA,kBAACpB,GAAU0K,SAAX,CAAoB9K,MAAO,CAAEsF,QAAOpF,aAChC,yBAAK4G,MAAO,CAAEiE,WAAY,OAAQC,cAAe,SAC7C,kBAAC9E,GAAD,MACA,kBAACkC,GAAD,MACA,kBAACW,GAAD,MAEA,kBAAC,GAAD,S,SCnCHkC,GAAa,WACtB,OACI,6BACI,2C,UCqBGC,OAnBf,WACI,OACI,oCACI,kBAAC,EAAD,MACA,kBAACC,GAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,SACR,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAU3M,GAAG,a,ghBCKjB4M,aAAqB,CAAEC,cAAc,IAErD,SAASC,KACL,OACI,kBAACtC,GAAA,EAAD,CAAYT,QAAQ,QAAQnB,MAAM,gBAAgBN,MAAM,UACnD,kBACD,kBAACyE,GAAA,EAAD,CAAMnE,MAAM,UAAU3I,KAAK,4BAA3B,gBAEQ,KACP,IAAI+M,MAAOC,cACX,KAKb,IAAMC,GAAQ,IAAIC,KACZC,GAAS,IAAIC,KAAa,CAC5BH,SACAI,KAAM,IAAIC,KAAS,CACfC,IAAK,8BACLC,QAAS,CACLC,cAAehC,aAAaC,QAAQ,SACpC,cAAe,uBACf,iBAAkB,aAI1BgC,GAAW,SAACC,EAAMC,GAClB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBZ,GACKa,OAAO,CACJC,SAAUC,KAAF,KAEWP,EAAqBC,KAU3C/E,MAAK,SAACsF,GAAD,OAAYL,EAAQK,MACzBC,OAAM,SAAC5I,GAAD,OAAWuI,EAAOvI,UAI/ByB,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACrC,UAAW,CACPiO,KAAM,CACFlG,gBAAiB/H,EAAM2K,QAAQuD,OAAOC,QAG9CtD,MAAO,CACH9B,UAAW/I,EAAMmJ,QAAQ,GACzBH,QAAS,OACToF,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJ9F,OAAQxI,EAAMmJ,QAAQ,GACtBpB,gBAAiB/H,EAAM2K,QAAQ4D,UAAUC,MAE7CC,KAAM,CACFvO,MAAO,OACP6I,UAAW/I,EAAMmJ,QAAQ,IAE7BuF,OAAQ,CACJlG,OAAQxI,EAAMmJ,QAAQ,EAAG,EAAG,QAIrB,SAASwF,KACpB,IAIIpB,EACAC,EALEpG,EAAUP,KADkB,EAGR+H,mBAASvD,aAAaC,QAAQ,UAAY,IAHlC,mBAG3BuD,EAH2B,KAe9BC,GAf8B,KAetB,uCAAG,WAAOpG,GAAP,iBAAArE,EAAA,sEAEWiJ,GAASC,EAAMC,GAF1B,OAEPuB,EAFO,OAGPC,EAAQD,EAAUE,KAAKC,MAAMF,MACjC3D,aAAaO,QAAQ,QAASoD,GAJnB,2CAAH,uDAMZ,MAAa,IAATH,EAAoB,kBAAC,KAAD,CAAUlP,GAAG,WAEjC,kBAACwM,GAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,MACjC,kBAAC+C,GAAA,EAAD,MACA,yBAAKjQ,UAAWkI,EAAQyD,OACpB,kBAACuE,GAAA,EAAD,CAAQlQ,UAAWkI,EAAQkH,QACvB,kBAAC,KAAD,OAEJ,kBAACnE,GAAA,EAAD,CAAY5C,UAAU,KAAKmC,QAAQ,MAC9BmF,GAEL,0BAAMQ,SAAUP,EAAU5P,UAAWkI,EAAQqH,KAAMa,YAAU,GACzD,kBAAClF,GAAA,EAAD,CACIV,QAAQ,WACRlB,OAAO,SACP+G,UAAQ,EACRC,WAAS,EACT/P,GAAG,QACH8J,MAAM,gBACNnG,KAAK,QACLqM,aAAa,QACbC,WAAS,EACTrF,SAnCG,SAAC3B,GACpB6E,EAAO7E,EAAE4B,OAAOtJ,SAoCJ,kBAACoJ,GAAA,EAAD,CACIV,QAAQ,WACRlB,OAAO,SACP+G,UAAQ,EACRC,WAAS,EACTpM,KAAK,WACLmG,MAAM,WACNpK,KAAK,WACLM,GAAG,WACHgQ,aAAa,mBACbpF,SA5CG,SAAC3B,GACpB8E,EAAO9E,EAAE4B,OAAOtJ,SA6CJ,kBAAC2O,GAAA,EAAD,CACIC,QAAS,kBAACC,GAAA,EAAD,CAAU7O,MAAM,WAAWuH,MAAM,YAC1CgB,MAAM,gBAEV,kBAACjB,EAAA,EAAD,CACInJ,KAAK,SACLqQ,WAAS,EACT9F,QAAQ,YACRnB,MAAM,UACNrJ,UAAWkI,EAAQsH,QALvB,UASA,kBAACoB,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMpO,MAAI,EAACsO,IAAE,GACT,kBAACtD,GAAA,EAAD,CAAM9M,KAAK,IAAI8J,QAAQ,SAAvB,qBAIJ,kBAACoG,GAAA,EAAD,CAAMpO,MAAI,GACN,kBAACgL,GAAA,EAAD,CAAM9M,KAAK,IAAI8J,QAAQ,SAClB,sCAMrB,kBAACuG,GAAA,EAAD,CAAKC,GAAI,GACL,kBAACzD,GAAD,QCjKD0D,OAff,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO9D,OAAK,EAACC,KAAK,UACd,kBAACqC,GAAD,OAEJ,kBAAC,KAAD,CAAOrC,KAAK,KACR,kBAAC,GAAD,UCFA8D,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZZC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD8HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBtI,MAAK,SAACuI,GACHA,EAAaC,gBAEhBjD,OAAM,SAAC5I,GACJzD,QAAQyD,MAAMA,EAAM8L,c","file":"static/js/main.fc47596d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <dic className=\"container-md\">\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\"\r\n                    aria-controls=\"navbarNav\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                activeClassName=\"active\"\r\n                                className=\"nav-link\"\r\n                                to=\"/home\"\r\n                            >\r\n                                Inicio{\" \"}\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                activeClassName=\"active\"\r\n                                className=\"nav-link\"\r\n                                to=\"/horario\"\r\n                            >\r\n                                Horario\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">\r\n                                Ajustes\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">\r\n                                Trabajadores\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"ml-5\">\r\n                        <b>v1.1.17</b>\r\n                    </div>\r\n                </div>\r\n            </dic>\r\n        </nav>\r\n    );\r\n};\r\n","export const types = {\r\n    generaHorario: \"Genera Horario\",\r\n    setIndex: \"establecer index\",\r\n    toggleCheck: \"Mostrar oculatar parametros\",\r\n    checkedTrue: \"poner el checked en true\",\r\n    setManual: \"Posiciones manuales del horario\",\r\n    setTienda: \"parametro tienda\",\r\n    setPista: \"parametro Pista\",\r\n    setManana: \"parametro mañana\",\r\n    setTarde: \"parametro  tarde\",\r\n    setNoche: \"parametro Noche\",\r\n    setName: \"Nombre del trabajador\",\r\n    reset: \"reiniciar todo\",\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { withStyles, InputBase } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { myContext } from \"../view/HorarioScreen\";\r\nimport { types } from \"../../reducers/types\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    input: {\r\n        width: \"3.5em\",\r\n        position: \"relative\",\r\n        fontSize: \"0.9em\",\r\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            \"Roboto\",\r\n            \"-apple-system\",\r\n            \"BlinkMacSystemFont\",\r\n            '\"Segoe UI\"',\r\n            '\"Helvetica Neue\"',\r\n            \"Arial\",\r\n            \"sans-serif\",\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(\",\"),\r\n        \"&:focus\": {\r\n            borderRadius: 0,\r\n            borderColor: \"#80bdff\",\r\n            boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nexport const SelectTable = ({ myKey, value, options }) => {\r\n    const { dispatch } = useContext(myContext);\r\n    return <SelectTable1 props={{ dispatch, myKey, value, options }} />;\r\n};\r\nexport const SelectTable1 = React.memo(({ props }) => {\r\n    const { dispatch, myKey, value, options } = props;\r\n    //const puestos = [\"Mt\", \"M\", \"Tt\", \"T\", \"N\", \"L\", \"L1\"];\r\n\r\n    const handleChange = (item) => {\r\n        console.log(\"EEE\", item);\r\n        dispatch({\r\n            type: types.setManual,\r\n            payload: {\r\n                keys: [myKey[0], myKey[1]],\r\n                value: item,\r\n            },\r\n        });\r\n    };\r\n    return (\r\n        <Select\r\n            key={myKey}\r\n            labelId=\"demo-customized-select-label\"\r\n            id=\"demo-customized-select\"\r\n            value={value}\r\n            input={<BootstrapInput />}\r\n        >\r\n            <MenuItem onClick={() => handleChange(null)} value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>\r\n            {options.map((item, i) => {\r\n                if (item === undefined) console.log(item);\r\n                return (\r\n                    <MenuItem\r\n                        onClick={() => handleChange(item)}\r\n                        key={i}\r\n                        value={item}\r\n                    >\r\n                        {item}\r\n                    </MenuItem>\r\n                );\r\n            })}\r\n        </Select>\r\n    );\r\n});\r\n","const setHorarioOrden = (trabajadores) => {\r\n    console.log(trabajadores);\r\n    let orden = setHorario(trabajadores);\r\n    let newOrden = [\r\n        [\r\n            orden[0][3],\r\n            orden[1][3],\r\n            orden[2][3],\r\n            orden[3][3],\r\n            orden[4][3],\r\n            orden[5][3],\r\n            orden[6][3],\r\n        ],\r\n        [\r\n            orden[0][4],\r\n            orden[1][4],\r\n            orden[2][4],\r\n            orden[3][4],\r\n            orden[4][4],\r\n            orden[5][4],\r\n            orden[6][4],\r\n        ],\r\n        [\r\n            orden[0][5],\r\n            orden[1][5],\r\n            orden[2][5],\r\n            orden[3][5],\r\n            orden[4][5],\r\n            orden[5][5],\r\n            orden[6][5],\r\n        ],\r\n        [\r\n            orden[0][6],\r\n            orden[1][6],\r\n            orden[2][6],\r\n            orden[3][6],\r\n            orden[4][6],\r\n            orden[5][6],\r\n            orden[6][6],\r\n        ],\r\n        [\r\n            orden[0][2],\r\n            orden[1][2],\r\n            orden[2][2],\r\n            orden[3][2],\r\n            orden[4][2],\r\n            orden[5][2],\r\n            orden[6][2],\r\n        ],\r\n        [\r\n            orden[0][0],\r\n            orden[1][0],\r\n            orden[2][0],\r\n            orden[3][0],\r\n            orden[4][0],\r\n            orden[5][0],\r\n            orden[6][0],\r\n        ],\r\n        [\r\n            orden[0][1],\r\n            orden[1][1],\r\n            orden[2][1],\r\n            orden[3][1],\r\n            orden[4][1],\r\n            orden[5][1],\r\n            orden[6][1],\r\n        ],\r\n    ];\r\n    return newOrden;\r\n};\r\n\r\nconst setHorario = (trabajadores) => {\r\n    const newsemana = cleanSemana();\r\n    let semana = setSemana(newsemana, trabajadores);\r\n    return semana;\r\n};\r\n\r\nexport const cleanSemana = () => {\r\n    let semana = new Array(7);\r\n    for (let i = 0; i < semana.length; i++) {\r\n        semana[i] = new Array(7);\r\n    }\r\n    return semana;\r\n};\r\n\r\nconst setSemana = (semana, trabajadores) => {\r\n    let dia = [\r\n        \"lunes\",\r\n        \"martes\",\r\n        \"miercoles\",\r\n        \"jueves\",\r\n        \"viernes\",\r\n        \"sabado\",\r\n        \"domingo\",\r\n    ];\r\n    let hora = \"\";\r\n    let puesto = \"\";\r\n    let puntos = -1;\r\n    let doblapuntos = 0;\r\n    let name = \"\";\r\n    let OtroName = \"\";\r\n    let listaHorario = [];\r\n    let ListaLibrar = [];\r\n    for (const trab of trabajadores) {\r\n        trab.yajornada = false;\r\n        trab.fuenoche = false;\r\n        trab.fuetarde = false;\r\n        trab.fuelibre = false;\r\n        for (const cada of trab.semana.horario) {\r\n            if (cada.forced === false) cada.valor = null;\r\n        }\r\n    }\r\n    for (let i = 0; i < semana.length; i++) {\r\n        for (let x = 0; x < semana[i].length; x++) {\r\n            puntos = -1;\r\n            let esRenganche = false;\r\n            let diasLibrados = [];\r\n            switch (x) {\r\n                case 0:\r\n                    name = \"\";\r\n                    for (const trab of trabajadores) {\r\n                        diasLibrados = trab.semana.horario.filter(\r\n                            (a) => a.valor === \"L\" || a.valor === \"L1\"\r\n                        );\r\n\r\n                        if (trab.yajornada) continue;\r\n                        if (\r\n                            trab.semana.horario[i].valor === \"L\" &&\r\n                            trab.semana.horario[i].forced\r\n                        ) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n                        if (trab.semana.horario[i].forced) continue;\r\n                        if (diasLibrados.length >= 2) continue;\r\n\r\n                        if (i === 5 && diasLibrados.length === 0) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n                        if (trab.fuesegundanoche && trab.noche < 5) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n                        if (trab.fuelibre && trab.noche === 5) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n                        if (trab.fuelibre) {\r\n                            ListaLibrar = [\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                            ];\r\n                        }\r\n\r\n                        ListaLibrar.push(trab.name);\r\n                    }\r\n\r\n                    if (ListaLibrar.length > 1) {\r\n                        name =\r\n                            ListaLibrar[\r\n                                Math.floor(Math.random() * ListaLibrar.length)\r\n                            ];\r\n                    } else {\r\n                        name = ListaLibrar[0];\r\n                    }\r\n\r\n                    ListaLibrar = [];\r\n                    diasLibrados = [];\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = false;\r\n                            trab.fuesegundanoche = false;\r\n                            trab.fuetarde = false;\r\n                            trab.fuelibre = true;\r\n                            trab.semana.horario[i].valor = \"L\";\r\n                            break;\r\n                        }\r\n                    }\r\n                    puesto = \"\";\r\n                    hora = \"libre\";\r\n                    break;\r\n\r\n                case 1:\r\n                    name = \"\";\r\n                    for (const trab of trabajadores) {\r\n                        diasLibrados = trab.semana.horario.filter(\r\n                            (a) => a.valor === \"L\" || a.valor === \"L1\"\r\n                        );\r\n\r\n                        if (trab.yajornada) {\r\n                            continue;\r\n                        }\r\n                        if (\r\n                            trab.semana.horario[i].valor === \"L1\" &&\r\n                            trab.semana.horario[i].forced\r\n                        ) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n                        if (trab.semana.horario[i].forced) continue;\r\n                        if (diasLibrados.length >= 2) {\r\n                            continue;\r\n                        }\r\n                        if (i === 5 && diasLibrados.length === 0) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n                        if (trab.fuelibre && trab.noche === 5) {\r\n                            ListaLibrar = [trab.name];\r\n                            break;\r\n                        }\r\n\r\n                        if (trab.fuelibre) {\r\n                            ListaLibrar = [\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                                trab.name,\r\n                            ];\r\n                        }\r\n\r\n                        ListaLibrar.push(trab.name);\r\n                    }\r\n                    if (ListaLibrar.length > 1) {\r\n                        name =\r\n                            ListaLibrar[\r\n                                Math.floor(Math.random() * ListaLibrar.length)\r\n                            ];\r\n                    } else {\r\n                        name = ListaLibrar[0];\r\n                    }\r\n                    ListaLibrar = [];\r\n                    diasLibrados = [];\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = false;\r\n                            trab.fuesegundanoche = false;\r\n                            trab.fuetarde = false;\r\n                            trab.fuelibre = true;\r\n                            trab.semana.horario[i].valor = \"L1\";\r\n                            break;\r\n                        }\r\n                    }\r\n                    puesto = \"\";\r\n                    hora = \"libre\";\r\n                    break;\r\n\r\n                case 2:\r\n                    name = \"\";\r\n                    for (const trab of trabajadores) {\r\n                        if (\r\n                            trab.semana.horario[i].valor === \"N\" &&\r\n                            trab.semana.horario[i].forced\r\n                        ) {\r\n                            trab.semana.horario[i].valor = \"N\";\r\n                            name = trab.name;\r\n                            break;\r\n                        }\r\n                        if (trab.semana.horario[i].forced) continue;\r\n\r\n                        if (trab.yajornada) continue;\r\n                        if (trab.noche < 1) continue;\r\n                        if (trab.noche > puntos) {\r\n                            puntos = trab.noche;\r\n                            name = trab.name;\r\n                        }\r\n                    }\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            if (trab.fuenoche) {\r\n                                trab.fuesegundanoche = true;\r\n                            } else {\r\n                                trab.fuesegundanoche = false;\r\n                            }\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = true;\r\n                            trab.fuetarde = false;\r\n                            trab.fuelibre = false;\r\n                            trab.fuelibre = false;\r\n                            trab.fuelibre = false;\r\n                            trab.semana.horario[i].valor = \"N\";\r\n                        }\r\n                    }\r\n                    puesto = \"tienda\";\r\n                    hora = \"noche\";\r\n                    break;\r\n\r\n                case 3:\r\n                    name = \"\";\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.fuenoche) continue;\r\n                        // if (\r\n                        //     trab.semana.horario[i].valor === \"M\" &&\r\n                        //     trab.semana.horario[i].forced\r\n                        // ) {\r\n                        //     trab.semana.horario[i].valor = \"M\";\r\n                        //     name = trab.name;\r\n                        //     break;\r\n                        // }\r\n\r\n                        if (trab.yajornada) continue;\r\n                        //if (trab.pista < 1) continue;\r\n                        if (trab.manana < 1) continue;\r\n                        if (!trab.fuetarde) {\r\n                            doblapuntos = trab.manana;\r\n                        } else {\r\n                            doblapuntos = 0;\r\n                        }\r\n\r\n                        listaHorario.unshift({\r\n                            ...trab,\r\n                            manana: doblapuntos,\r\n                        });\r\n                    }\r\n\r\n                    listaHorario.sort(function (a, b) {\r\n                        if (a.manana > b.manana) {\r\n                            return -1;\r\n                        }\r\n                        if (a.manana < b.manana) {\r\n                            return 1;\r\n                        }\r\n\r\n                        return -1;\r\n                    });\r\n\r\n                    try {\r\n                        while (\r\n                            listaHorario[0].pista + listaHorario[1].pista ===\r\n                            0\r\n                        ) {\r\n                            listaHorario.splice(1, 1);\r\n                        }\r\n                        if (\r\n                            (listaHorario[0].pista + listaHorario[1].tienda) *\r\n                                Math.ceil(listaHorario[0].pista / 10) >\r\n                            (listaHorario[1].pista + listaHorario[0].tienda) *\r\n                                Math.ceil(listaHorario[1].pista / 10)\r\n                        ) {\r\n                            name = listaHorario[0].name;\r\n                            OtroName = listaHorario[1].name;\r\n                        } else {\r\n                            name = listaHorario[1].name;\r\n                            OtroName = listaHorario[0].name;\r\n                        }\r\n                    } catch (error) {\r\n                        name = \"\";\r\n                        OtroName = \"\";\r\n                    }\r\n\r\n                    listaHorario = [];\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            if (trab.fuetarde) {\r\n                                esRenganche = true;\r\n                            } else {\r\n                                esRenganche = false;\r\n                            }\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = false;\r\n                            trab.fuetarde = false;\r\n                            trab.fuelibre = false;\r\n                            trab.fuelibre = false;\r\n                            trab.semana.horario[i].valor = \"M\";\r\n                        }\r\n                    }\r\n                    puesto = \"pista\";\r\n                    hora = \"mañana\";\r\n                    doblapuntos = 0;\r\n\r\n                    break;\r\n\r\n                case 4:\r\n                    name = OtroName;\r\n                    OtroName = \"\";\r\n\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            if (trab.fuetarde) {\r\n                                esRenganche = true;\r\n                            } else {\r\n                                esRenganche = false;\r\n                            }\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = false;\r\n                            trab.fuetarde = false;\r\n                            trab.fuelibre = false;\r\n                            trab.semana.horario[i].valor = \"Mt\";\r\n                        }\r\n                    }\r\n                    doblapuntos = 0;\r\n                    puesto = \"tienda\";\r\n                    hora = \"mañana\";\r\n                    break;\r\n\r\n                case 5:\r\n                    name = \"\";\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.fuenoche) continue;\r\n                        // if (\r\n                        //     trab.semana.horario[i].valor === \"T\" &&\r\n                        //     trab.semana.horario[i].forced\r\n                        // ) {\r\n                        //     trab.semana.horario[i].valor = \"T\";\r\n                        //     name = trab.name;\r\n                        //     break;\r\n                        // }\r\n\r\n                        if (trab.yajornada) continue;\r\n                        //if (trab.pista < 1) continue;\r\n                        if (trab.tarde + trab.pista > puntos) {\r\n                            puntos = trab.tarde;\r\n                        }\r\n                        listaHorario.unshift(trab);\r\n                    }\r\n\r\n                    listaHorario.sort(function (a, b) {\r\n                        if (a.tarde > b.tarde) {\r\n                            return -1;\r\n                        }\r\n                        if (a.tarde < b.tarde) {\r\n                            return 1;\r\n                        }\r\n\r\n                        return -1;\r\n                    });\r\n\r\n                    try {\r\n                        if (\r\n                            (listaHorario[0].pista + listaHorario[1].tienda) *\r\n                                Math.ceil(listaHorario[0].pista / 10) >\r\n                            (listaHorario[1].pista + listaHorario[0].tienda) *\r\n                                Math.ceil(listaHorario[1].pista / 10)\r\n                        ) {\r\n                            if (\r\n                                listaHorario[0].pista === 0 ||\r\n                                listaHorario[1].tienda === 0\r\n                            )\r\n                                throw new Error();\r\n                            name = listaHorario[0].name;\r\n                            OtroName = listaHorario[1].name;\r\n                        } else {\r\n                            if (\r\n                                listaHorario[1].pista === 0 ||\r\n                                listaHorario[0].tienda === 0\r\n                            )\r\n                                throw new Error();\r\n                            name = listaHorario[1].name;\r\n                            OtroName = listaHorario[0].name;\r\n                        }\r\n                    } catch (error) {\r\n                        name = \"\";\r\n                        OtroName = \"\";\r\n                    }\r\n\r\n                    listaHorario = [];\r\n\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = false;\r\n                            trab.fuetarde = true;\r\n                            trab.fuelibre = false;\r\n                            trab.fuelibre = false;\r\n                            trab.semana.horario[i].valor = \"T\";\r\n                        }\r\n                    }\r\n                    puesto = \"pista\";\r\n                    hora = \"tarde\";\r\n                    break;\r\n\r\n                case 6:\r\n                    name = OtroName;\r\n                    OtroName = \"\";\r\n                    for (const trab of trabajadores) {\r\n                        if (trab.name === name) {\r\n                            trab.yajornada = true;\r\n                            trab.fuenoche = false;\r\n                            trab.fuetarde = true;\r\n                            trab.fuelibre = false;\r\n                            trab.semana.horario[i].valor = \"Tt\";\r\n                        }\r\n                    }\r\n                    puesto = \"tienda\";\r\n                    hora = \"tarde\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            semana[i][x] = {\r\n                name: [name],\r\n                esRenganche,\r\n                dia: dia[i],\r\n                hora,\r\n                puesto,\r\n            };\r\n\r\n            name = \"\";\r\n        }\r\n        for (const trab of trabajadores) {\r\n            trab.yajornada = false;\r\n        }\r\n    }\r\n\r\n    return semana;\r\n};\r\n\r\nexport default setHorarioOrden;\r\n","import { types } from \"../reducers/types\";\r\nimport setHorarioOrden from \"../helpers/setHorario\";\r\n\r\nexport const generaHorario = async (trabajadoresObject) => {\r\n    const horarioGenerado = setHorarioOrden(trabajadoresObject);\r\n    return {\r\n        type: types.generaHorario,\r\n        payload: horarioGenerado,\r\n    };\r\n};\r\n","export const store = {\r\n    conf: {\r\n        index: 0,\r\n        checked: false,\r\n        desabled: true,\r\n        alert: false,\r\n    },\r\n    trabajadores: [\r\n        {\r\n            name: \"trabajador1\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            name: \"trabajador2\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            name: \"trabajador3\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            name: \"trabajador4\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            name: \"trabajador5\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n\r\n        {\r\n            name: \"trabajador6\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            name: \"trabajador7\",\r\n            tienda: 5,\r\n            pista: 5,\r\n            manana: 5,\r\n            tarde: 5,\r\n            noche: 5,\r\n            yajornada: false,\r\n            fuetarde: false,\r\n            fuenoche: false,\r\n            fuesegundanoche: false,\r\n            fuelibre: false,\r\n            semana: {\r\n                fecha: \"\",\r\n                horario: [\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                    { valor: null, forced: false },\r\n                ],\r\n            },\r\n        },\r\n    ],\r\n    semanaDefault: [\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"mañana\",\r\n                puesto: \"tienda\",\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"mañana\",\r\n                puesto: \"pista\",\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"tarde\",\r\n                puesto: \"tienda\",\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"tarde\",\r\n                puesto: \"pista\",\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"noche\",\r\n                puesto: \"tienda\",\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                name: [\"\"],\r\n                dia: \"lunes\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"martes\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"miercoles\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"jueves\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"viernes\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"sabado\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n            {\r\n                name: [\"\"],\r\n                dia: \"domingo\",\r\n                hora: \"libre\",\r\n                puesto: \"\",\r\n            },\r\n        ],\r\n    ],\r\n};\r\n","import { types } from \"../reducers/types\";\r\n\r\nexport const resetAction = async (trabajadores) => {\r\n    for (const trab of trabajadores) {\r\n        trab.semana = {\r\n            fecha: \"\",\r\n            horario: [\r\n                { valor: null, forced: false },\r\n                { valor: null, forced: false },\r\n                { valor: null, forced: false },\r\n                { valor: null, forced: false },\r\n                { valor: null, forced: false },\r\n                { valor: null, forced: false },\r\n                { valor: null, forced: false },\r\n            ],\r\n        };\r\n        console.log(trab);\r\n    }\r\n    return {\r\n        type: types.reset,\r\n        payload: trabajadores,\r\n    };\r\n};\r\n","import { types } from \"./types\";\r\nimport { store } from \"../store/store\";\r\n\r\nexport const trabajadoresReducer = (state, action) => {\r\n    const puestos = [\"Mt\", \"M\", \"Tt\", \"T\", \"N\", \"L\", \"L1\"];\r\n    let newTrab;\r\n    switch (action.type) {\r\n        case types.generaHorario:\r\n            return { ...state, semanaDefault: action.payload };\r\n\r\n        case types.setManual:\r\n            //logica aqui\r\n            newTrab = [...state.trabajadores];\r\n            let value = action.payload.value;\r\n            console.log(\"value\", value);\r\n            let myKey = action.payload.keys;\r\n            console.log(\"myKey\", myKey);\r\n            for (const t of newTrab) {\r\n                if (t.name === value) {\r\n                    t.semana.horario[myKey[1]].valor = puestos[myKey[0]];\r\n                    t.semana.horario[myKey[1]].forced = true;\r\n                }\r\n            }\r\n            console.log(newTrab);\r\n            for (const tt of newTrab) {\r\n                if (\r\n                    tt.semana.horario[myKey[1]].valor === puestos[myKey[0]] &&\r\n                    tt.name !== value\r\n                ) {\r\n                    console.log(\"salta\");\r\n                    tt.semana.horario[myKey[1]].valor = null;\r\n                    tt.semana.horario[myKey[1]].forced = false;\r\n                }\r\n            }\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.toggleCheck:\r\n            return {\r\n                ...state,\r\n                conf: { ...state.conf, checked: !state.conf.checked },\r\n            };\r\n\r\n        case types.checkedTrue:\r\n            return { ...state, conf: { ...state.conf, checked: true } };\r\n\r\n        case types.setIndex:\r\n            return { ...state, conf: { ...state.conf, index: action.payload } };\r\n\r\n        case types.setTienda:\r\n            newTrab = [...state.trabajadores];\r\n            newTrab[action.payload.index].tienda = action.payload.value;\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.setPista:\r\n            newTrab = [...state.trabajadores];\r\n            newTrab[action.payload.index].pista = action.payload.value;\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.setManana:\r\n            newTrab = [...state.trabajadores];\r\n            newTrab[action.payload.index].manana = action.payload.value;\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.setTarde:\r\n            newTrab = [...state.trabajadores];\r\n            newTrab[action.payload.index].tarde = action.payload.value;\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.setNoche:\r\n            newTrab = [...state.trabajadores];\r\n            newTrab[action.payload.index].noche = action.payload.value;\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.setName:\r\n            newTrab = [...state.trabajadores];\r\n            newTrab[action.payload.index].name = action.payload.value;\r\n            return { ...state, trabajadores: newTrab };\r\n\r\n        case types.reset:\r\n            return { ...state, trabajadores: [...state.trabajadores] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../reducers/types\";\r\n\r\nexport const fijarAction = async (trabajadores) => {\r\n    for (const trab of trabajadores) {\r\n        for (const dia of trab.semana.horario) {\r\n            if (dia.valor === \"L\" || dia.valor === \"L1\") {\r\n                dia.forced = true;\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        type: types.reset,\r\n        payload: trabajadores,\r\n    };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { SelectTable } from \"../select/select\";\r\nimport \"./table.css\";\r\nimport { myContext } from \"../view/HorarioScreen\";\r\nimport { types } from \"../../reducers/types\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { generaHorario } from \"../../actions/generaSemana\";\r\nimport { store } from \"../../store/store\";\r\nimport { resetAction } from \"../../actions/resetAction\";\r\nimport { trabajadoresReducer } from \"../../reducers/trabajadoresReducer\";\r\nimport { fijarAction } from \"../../actions/fijarAction\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 200,\r\n        padding: \"0 !important\",\r\n    },\r\n});\r\n\r\nexport default function SimpleTable() {\r\n    const { state, dispatch } = useContext(myContext);\r\n\r\n    const { trabajadores, semanaDefault } = state;\r\n    return <SimpleTable1 props={{ semanaDefault, trabajadores, dispatch }} />;\r\n}\r\n\r\nfunction SimpleTable1({ props }) {\r\n    const { dispatch, trabajadores, semanaDefault } = props;\r\n\r\n    const options = trabajadores.map((item) => item.name);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleGenerar = (e) => {\r\n        e.preventDefault();\r\n        generaHorario(trabajadores).then(dispatch);\r\n    };\r\n\r\n    const reiniciaTodo = () => {\r\n        resetAction(trabajadores).then(dispatch);\r\n        //localStorage.removeItem(\"trabajadoresStorage\");\r\n    };\r\n\r\n    const handleFijar = () => {\r\n        fijarAction(trabajadores).then(dispatch);\r\n    };\r\n\r\n    const cabecera = [\"\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\", \"D\"];\r\n    const col1 = [\"M\", \"Mt\", \"T\", \"Tt\", \"N\", \"L\", \"L\"];\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table\r\n                    className={classes.table}\r\n                    size=\"small\"\r\n                    aria-label=\"simple table\"\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {cabecera.map((item, i) => {\r\n                                return (\r\n                                    <TableCell\r\n                                        key={item + 1}\r\n                                        style={{ backgroundColor: \"#5982DE\" }}\r\n                                        hey={item}\r\n                                        align=\"center\"\r\n                                    >\r\n                                        {item}\r\n                                    </TableCell>\r\n                                );\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {semanaDefault.map((row, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell\r\n                                    style={{ backgroundColor: \"#5982DE\" }}\r\n                                    align=\"center\"\r\n                                    key={i}\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                >\r\n                                    {col1[i]}\r\n                                </TableCell>\r\n                                {row.map((cel, x) => {\r\n                                    return (\r\n                                        <TableCell\r\n                                            style={\r\n                                                cel.esRenganche\r\n                                                    ? {\r\n                                                          backgroundColor:\r\n                                                              \"#E88B66\",\r\n                                                      }\r\n                                                    : i > 1 && i < 4\r\n                                                    ? {\r\n                                                          backgroundColor:\r\n                                                              \"#e7e7e7\",\r\n                                                      }\r\n                                                    : i > 4\r\n                                                    ? {\r\n                                                          backgroundColor:\r\n                                                              \"#64BBFA\",\r\n                                                      }\r\n                                                    : {\r\n                                                          backgroundColor:\r\n                                                              \"#fff\",\r\n                                                      }\r\n                                            }\r\n                                            key={i + \"i\" + x}\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                        >\r\n                                            {i < 5 ? (\r\n                                                <p>{cel.name[0]}</p>\r\n                                            ) : (\r\n                                                <SelectTable\r\n                                                    key={i + \"x\" + x}\r\n                                                    myKey={[i, x]}\r\n                                                    value={cel.name[0]}\r\n                                                    options={options}\r\n                                                />\r\n                                            )}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div className=\"row mt-1\">\r\n                <div className=\"col text-left\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                        onClick={reiniciaTodo}\r\n                    >\r\n                        Volver a empezar\r\n                    </Button>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                        onClick={handleFijar}\r\n                    >\r\n                        Fijar libres\r\n                    </Button>\r\n                </div>\r\n                <div className=\"col text-right\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                        onClick={handleGenerar}\r\n                    >\r\n                        Generar\r\n                    </Button>\r\n\r\n                    {/* <FormControlLabel\r\n                    className=\"cheked\"\r\n                    style={{ color: \"#5164C2\" }}\r\n                    disabled={desabled}\r\n                    control={\r\n                        <Checkbox\r\n                            onChange={() => setAutomat((auto) => !auto)}\r\n                            checked={automat}\r\n                            color=\"primary\"\r\n                            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                            name=\"checkedI\"\r\n                        />\r\n                    }\r\n                    label=\"Automatico\"\r\n                /> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { myContext } from \"../view/HorarioScreen\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport \"./Chip.css\";\r\nimport { types } from \"../../reducers/types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chip: {\r\n        marg: \"100px\",\r\n    },\r\n    root: {\r\n        marginTop: \"10px\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1.2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Chips() {\r\n    const { state, dispatch } = useContext(myContext);\r\n    const { trabajadores, conf } = state;\r\n    const { index } = conf;\r\n    return <Chips1 props={{ trabajadores, index, dispatch }} />;\r\n}\r\n\r\nfunction Chips1({ props }) {\r\n    const { trabajadores, index, dispatch } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleClick = (indexLocal) => {\r\n        if (index === indexLocal) {\r\n            dispatch({ type: types.toggleCheck });\r\n        } else {\r\n            dispatch({ type: types.setIndex, payload: indexLocal });\r\n            dispatch({ type: types.checkedTrue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SettingsIcon className=\"icono\" color=\"primary\" />\r\n\r\n            {trabajadores.map(({ name }, i) => {\r\n                return (\r\n                    <Chip\r\n                        key={name}\r\n                        className={classes.chip}\r\n                        label={name}\r\n                        clickable\r\n                        onClick={() => handleClick(i)}\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        deleteIcon={<DoneIcon />}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { TextField, Typography } from \"@material-ui/core\";\r\nimport { myContext } from \"../view/HorarioScreen\";\r\nimport { types } from \"../../reducers/types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    colap: {\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"#f9f1f9\",\r\n        padding: \"30px\",\r\n        justifyContent: \"center\",\r\n    },\r\n    input: {\r\n        width: \"2em\",\r\n        marginLeft: \"2em\",\r\n    },\r\n    inputName: {\r\n        width: \"6em\",\r\n        marginLeft: \"2em\",\r\n    },\r\n}));\r\n\r\nexport default function SimpleCollapse() {\r\n    const { state, dispatch } = useContext(myContext);\r\n    const { trabajadores, conf } = state;\r\n    const { checked, index } = conf;\r\n\r\n    return (\r\n        <SimpleCollapse1 props={{ dispatch, trabajadores, checked, index }} />\r\n    );\r\n}\r\n\r\nfunction SimpleCollapse1({ props }) {\r\n    const { trabajadores, dispatch, checked, index } = props;\r\n    const classes = useStyles();\r\n\r\n    let { name, tienda, pista, manana, tarde, noche } = trabajadores[index];\r\n\r\n    const handleInputChangeTienda = (e) => {\r\n        dispatch({\r\n            type: types.setTienda,\r\n            payload: { value: e.target.value * 1, index },\r\n        });\r\n    };\r\n    const handleInputChangePista = (e) => {\r\n        dispatch({\r\n            type: types.setPista,\r\n            payload: { value: e.target.value * 1, index },\r\n        });\r\n    };\r\n\r\n    const handleInputChangeManana = (e) => {\r\n        dispatch({\r\n            type: types.setManana,\r\n            payload: { value: e.target.value * 1, index },\r\n        });\r\n    };\r\n\r\n    const handleInputChangeTarde = (e) => {\r\n        dispatch({\r\n            type: types.setTarde,\r\n            payload: { value: e.target.value * 1, index },\r\n        });\r\n    };\r\n\r\n    const handleInputChangeNoche = (e) => {\r\n        dispatch({\r\n            type: types.setNoche,\r\n            payload: { value: e.target.value * 1, index },\r\n        });\r\n    };\r\n\r\n    const handleInputChangeName = (e) => {\r\n        dispatch({\r\n            type: types.setName,\r\n            payload: { value: e.target.value, index },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Collapse className={classes.colap} in={checked}>\r\n            <Typography variant=\"h5\">{name}</Typography>\r\n            <TextField\r\n                className={classes.input}\r\n                label=\"tienda\"\r\n                value={tienda}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangeTienda}\r\n                //onBlur={handleBlur}\r\n                inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 5,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                }}\r\n            />\r\n            <TextField\r\n                className={classes.input}\r\n                label=\"Pista\"\r\n                value={pista}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangePista}\r\n                //onBlur={handleBlur}\r\n                inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 5,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                }}\r\n            />\r\n            <TextField\r\n                className={classes.input}\r\n                label=\"Mañana\"\r\n                value={manana}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangeManana}\r\n                //onBlur={handleBlur}\r\n                inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 5,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                }}\r\n            />\r\n            <TextField\r\n                className={classes.input}\r\n                label=\"Tarde\"\r\n                value={tarde}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangeTarde}\r\n                //onBlur={handleBlur}\r\n                inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 5,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                }}\r\n            />\r\n            <TextField\r\n                className={classes.input}\r\n                label=\"Noche\"\r\n                value={noche}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangeNoche}\r\n                //onBlur={handleBlur}\r\n                inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 5,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                }}\r\n            />\r\n            <TextField\r\n                className={classes.inputName}\r\n                label=\"Nombre\"\r\n                value={name}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangeName}\r\n                //onBlur={handleBlur}\r\n                inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 5,\r\n                    type: \"text\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                }}\r\n            />\r\n        </Collapse>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n    Select,\r\n    MenuItem,\r\n    Typography,\r\n    InputLabel,\r\n    FormControlLabel,\r\n    FormControl,\r\n} from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { myContext } from \"../view/HorarioScreen\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        \"label + &\": {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        width: \"50px\",\r\n        borderRadius: 4,\r\n        position: \"relative\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"1px solid #ced4da\",\r\n        fontSize: 16,\r\n        padding: \"10px 26px 10px 12px\",\r\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            \"Roboto\",\r\n            \"-apple-system\",\r\n            \"BlinkMacSystemFont\",\r\n            '\"Segoe UI\"',\r\n            '\"Helvetica Neue\"',\r\n            \"Arial\",\r\n            \"sans-serif\",\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(\",\"),\r\n        \"&:focus\": {\r\n            borderRadius: 4,\r\n            borderColor: \"#80bdff\",\r\n            boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        textAlign: \"left\",\r\n        margin: theme.spacing(0.5),\r\n        //minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport const FinalChanges = () => {\r\n    const classes = useStyles();\r\n    let horarios = [\"Mt\", \"M\", \"Tt\", \"T\", \"N\", \"L\", \"L1\"];\r\n    let dias = [\r\n        \"Lunes\",\r\n        \"Martes\",\r\n        \"Miercoles\",\r\n        \"Jueves\",\r\n        \"Viernes\",\r\n        \"Sabado\",\r\n        \"Domingo\",\r\n    ];\r\n    const { trabajadores, desabled } = useContext(myContext);\r\n    return (\r\n        !desabled &&\r\n        trabajadores.map((trabajador) => {\r\n            return (\r\n                <>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Typography variant=\"h6\">{trabajador.name}</Typography>\r\n                        {trabajador.semana.horario.map((horario, ind) => {\r\n                            return (\r\n                                <>\r\n                                    <FormControl\r\n                                        className={classes.formControl}\r\n                                    >\r\n                                        <InputLabel>{dias[ind]}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-customized-select-label\"\r\n                                            id=\"demo-customized-select\"\r\n                                            value={\r\n                                                horario.valor\r\n                                                    ? horario.valor\r\n                                                    : \"\"\r\n                                            }\r\n                                            onChange={() =>\r\n                                                console.log(\"changed\")\r\n                                            }\r\n                                            input={<BootstrapInput />}\r\n                                        >\r\n                                            <MenuItem value={horario.valor}>\r\n                                                <em>None</em>\r\n                                            </MenuItem>\r\n                                            {horarios.map(\r\n                                                (horarioEstablecido) => {\r\n                                                    return (\r\n                                                        <MenuItem\r\n                                                            value={\r\n                                                                horarioEstablecido\r\n                                                            }\r\n                                                        >\r\n                                                            {horarioEstablecido ===\r\n                                                            \"L1\"\r\n                                                                ? \"L\"\r\n                                                                : horarioEstablecido}\r\n                                                        </MenuItem>\r\n                                                    );\r\n                                                }\r\n                                            )}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <hr\r\n                        style={{\r\n                            margin: \"40px 0 40px 0\",\r\n                            borderTop: \"0.5px solid #eee\",\r\n                        }}\r\n                    />\r\n                </>\r\n            );\r\n        })\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./INstrucciones.css\";\r\n\r\nexport const Instrucciones = () => {\r\n    return (\r\n        <div className=\"pa\">\r\n            <h2>Registro de cambios</h2>\r\n            <hr />\r\n            <p>\r\n                <b>v1.1.17</b>\r\n            </p>\r\n            <ol>\r\n                <li>\r\n                    Configuración inicial. La primera vez que se abra la app, no\r\n                    tendrá nombres ni parámetros de trabajadores, deberán ser\r\n                    establecidos manualmente.\r\n                </li>\r\n                <li>\r\n                    Persistencia de datos a nivel local. Una vez establecida una\r\n                    configuración, los datos van a persistir, así como cualquier\r\n                    cambio posterior.\r\n                </li>\r\n                <li>\r\n                    Añadida la opción de establecer y/o modificar el nombre del\r\n                    trabajador al lado de los parámetros.\r\n                </li>\r\n                <li>\r\n                    El botón \"VOLVER A EMPEZAR\" solamente elimina los días\r\n                    libres que habían sido puestos manualmente\r\n                </li>\r\n                <li>\r\n                    Añadido el botón “FIJAR LIBRE”, su función es: Una vez\r\n                    encontrada una combinación de días libres que haya sido\r\n                    generada automáticamente, dejar de generar nuevas\r\n                    combinaciones y solo hacer modificaciones mediante los\r\n                    parámetros en la disposición de los turnos.\r\n                </li>\r\n                <li>\r\n                    Corregido: Si un trabajador tiene “0” en algún parámetro, la\r\n                    aplicación lanzará un error antes de ponerlo.\r\n                </li>\r\n            </ol>\r\n            <hr />\r\n            <p>\r\n                <b>v1.1.16</b>\r\n            </p>\r\n            <ol>\r\n                <li>Removido Rafa de la lista de trabajadores</li>\r\n                <li>\r\n                    Añadido \"Judith\" a la lista de trabajadores con los\r\n                    parametros por defecto de tienda = 5, mañana = 5\r\n                </li>\r\n                <li>\r\n                    Los parametros por defecto de \"Nuñes\" pasan a ser: tienda:\r\n                    0, pista: 4, mañana: 1, tarde: 4, noche: 2\r\n                </li>\r\n                <li>\r\n                    Ahora, cuando se realice cualquier cambio será visible\r\n                    inmediatamente. Antes era necesario dar al botón de\r\n                    \"GENERAR\"\r\n                </li>\r\n                <li>\r\n                    El botón \"VOLVER A EMPEZAR\" alimina todos los cambios y\r\n                    vuelve a los valores por defecto.\r\n                </li>\r\n                <li>\r\n                    Añadido el registro de cambios para tener un informe\r\n                    detallado de lo que cambie en cada version a partir de la\r\n                    v1.1.16\r\n                </li>\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, createContext, useReducer } from \"react\";\r\nimport SimpleTable from \"../table/table\";\r\nimport Chips from \"../chip/Chip\";\r\nimport SimpleCollapse from \"../fade/Fade\";\r\nimport { trabajadoresReducer } from \"../../reducers/trabajadoresReducer\";\r\nimport { FinalChanges } from \"../FinalChanges/FinalChanges\";\r\nimport { Instrucciones } from \"../temp/Instrucciones\";\r\nimport { store } from \"../../store/store\";\r\nimport { generaHorario } from \"../../actions/generaSemana\";\r\n\r\nexport const myContext = createContext();\r\n\r\nconst init = () => {\r\n    if (!!localStorage.getItem(\"store\")) {\r\n        console.log(\"si\");\r\n        return JSON.parse(localStorage.getItem(\"store\"));\r\n    }\r\n    return store;\r\n};\r\n\r\nexport const HorarioScreen = () => {\r\n    const [state, dispatch] = useReducer(trabajadoresReducer, {}, init);\r\n\r\n    const { trabajadores } = state;\r\n\r\n    useEffect(() => {\r\n        generaHorario(state.trabajadores).then(dispatch);\r\n        localStorage.setItem(\"store\", JSON.stringify(state));\r\n    }, [trabajadores]);\r\n\r\n    return (\r\n        <myContext.Provider value={{ state, dispatch }}>\r\n            <div style={{ paddingTop: \"50px\", paddingBottom: \"50px\" }}>\r\n                <SimpleTable />\r\n                <Chips />\r\n                <SimpleCollapse />\r\n                {/* <FinalChanges /> */}\r\n                <Instrucciones />\r\n            </div>\r\n        </myContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const HomeScreem = () => {\r\n    return (\r\n        <div>\r\n            <h1>Hola Home</h1>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { NavBar } from \"../navBar/NavBar\";\r\nimport { HorarioScreen } from \"../view/HorarioScreen\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HomeScreem } from \"../view/HomeScreem\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nfunction Admin() {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Container maxWidth=\"md\">\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <HorarioScreen />\r\n                    </Route>\r\n                    <Route path=\"/home\">\r\n                        <HomeScreem />\r\n                    </Route>\r\n                    <Redirect to=\"home\" />\r\n                </Switch>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Admin;\r\n","//apollo client\r\n//apollo client\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\n//material UI\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { resolve } from \"dns\";\r\nconst history = createBrowserHistory({ forceRefresh: false });\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst cache = new InMemoryCache();\r\nconst client = new ApolloClient({\r\n    cache,\r\n    link: new HttpLink({\r\n        uri: \"http://192.168.43.174:8383/\",\r\n        headers: {\r\n            authorization: localStorage.getItem(\"token\"),\r\n            \"client-name\": \"Space Explorer [web]\",\r\n            \"client-version\": \"1.0.0\",\r\n        },\r\n    }),\r\n});\r\nlet miclient = (user, pass) => {\r\n    return new Promise((resolve, reject) => {\r\n        client\r\n            .mutate({\r\n                mutation: gql`\r\n            mutation {\r\n                login(username: \"${user}\", password: \"${pass}\") {\r\n                    token\r\n                    user {\r\n                            id\r\n                            correo\r\n                        }\r\n                    }\r\n                }\r\n                `,\r\n            })\r\n            .then((result) => resolve(result))\r\n            .catch((error) => reject(error));\r\n    });\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \"@global\": {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginScreem() {\r\n    const classes = useStyles();\r\n\r\n    const [loged, setLoged] = useState(localStorage.getItem(\"token\") || \"\");\r\n\r\n    var user;\r\n    var pass;\r\n\r\n    let handleChangeMail = (e) => {\r\n        user = e.target.value;\r\n    };\r\n    let handleChangePass = (e) => {\r\n        pass = e.target.value;\r\n    };\r\n\r\n    let entrando = async (e) => {\r\n        // e.preventDefault();\r\n        let loginUser = await miclient(user, pass);\r\n        let token = loginUser.data.login.token;\r\n        localStorage.setItem(\"token\", token);\r\n    };\r\n    if (loged != \"\") return <Redirect to=\"/admin\" />;\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {loged}\r\n                </Typography>\r\n                <form onSubmit={entrando} className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={handleChangeMail}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={handleChangePass}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Entrar\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Admin from \"./components/layout/Admin\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LoginScreem from \"./components/layout/Login\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/login\">\r\n                    <LoginScreem />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Admin />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType !== null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}